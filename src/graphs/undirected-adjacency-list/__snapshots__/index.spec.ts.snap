// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Removal Should remove a vertex 1`] = `
Object {
  "Point B": Object {
    "edges": Object {
      "Point C": true,
      "Point D": true,
    },
    "payload": true,
  },
  "Point C": Object {
    "edges": Object {
      "Point B": false,
    },
    "payload": false,
  },
  "Point D": Object {
    "edges": Object {
      "Point B": false,
    },
    "payload": false,
  },
}
`;

exports[`Removal should remove an edge 1`] = `
Object {
  "Point A": Object {
    "edges": Object {
      "Point C": true,
    },
    "payload": true,
  },
  "Point B": Object {
    "edges": Object {
      "Point C": true,
      "Point D": true,
    },
    "payload": true,
  },
  "Point C": Object {
    "edges": Object {
      "Point A": false,
      "Point B": false,
    },
    "payload": false,
  },
  "Point D": Object {
    "edges": Object {
      "Point B": false,
    },
    "payload": false,
  },
}
`;

exports[`Traversal Should do a Depth First Traversal 1`] = `
Array [
  "The vertex is named Maine and we are going to New Hampshire",
  "The vertex is named New Hampshire and we are going to Massachusetts",
  "The vertex is named Massachusetts and we are going to Connecticut",
  "The vertex is named Connecticut and we are going to Rhode Island",
  "The vertex is named Rhode Island and we have no unvisited connections",
  "The vertex is named Connecticut and we are going to New York",
  "The vertex is named New York and we are going to Vermont",
  "The vertex is named Vermont and we have no unvisited connections",
  "The vertex is named Massachusetts and we are going to Vermont",
  "The vertex is named Vermont and we have no unvisited connections",
  "The vertex is named Massachusetts and we are going to Rhode Island",
  "The vertex is named Rhode Island and we have no unvisited connections",
  "The vertex is named New Hampshire and we are going to Vermont",
  "The vertex is named Vermont and we have no unvisited connections",
]
`;

exports[`Undirected Adjacency Graph Unit tests Add edges Should throw if we try to add to a non existent vertex 1`] = `"One or both of these vertices don't exist Point A / Point C"`;

exports[`Undirected Adjacency Graph Unit tests Should throw if we try to add to a non existent vertex 1`] = `"One or both of these vertices don't exist Point C / Point B"`;
