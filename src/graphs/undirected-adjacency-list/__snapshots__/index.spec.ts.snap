// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Removal Should remove a vertex 1`] = `
{
  "Point B": {
    "edges": {
      "Point C": {
        "name": "Point C",
        "payload": true,
      },
      "Point D": {
        "name": "Point D",
        "payload": true,
      },
    },
    "name": "Point B",
    "payload": true,
  },
  "Point C": {
    "edges": {
      "Point B": {
        "name": "Point B",
        "payload": false,
      },
    },
    "name": "Point C",
    "payload": false,
  },
  "Point D": {
    "edges": {
      "Point B": {
        "name": "Point B",
        "payload": false,
      },
    },
    "name": "Point D",
    "payload": false,
  },
}
`;

exports[`Removal should remove an edge 1`] = `
{
  "Point A": {
    "edges": {
      "Point C": {
        "name": "Point C",
        "payload": true,
      },
    },
    "name": "Point A",
    "payload": true,
  },
  "Point B": {
    "edges": {
      "Point C": {
        "name": "Point C",
        "payload": true,
      },
      "Point D": {
        "name": "Point D",
        "payload": true,
      },
    },
    "name": "Point B",
    "payload": true,
  },
  "Point C": {
    "edges": {
      "Point A": {
        "name": "Point A",
        "payload": false,
      },
      "Point B": {
        "name": "Point B",
        "payload": false,
      },
    },
    "name": "Point C",
    "payload": false,
  },
  "Point D": {
    "edges": {
      "Point B": {
        "name": "Point B",
        "payload": false,
      },
    },
    "name": "Point D",
    "payload": false,
  },
}
`;

exports[`Traversal Should do a Breadth First Traversal 1`] = `
[
  "We are at Maine",
  "We are at New Hampshire and we came from Maine",
  "We are at Massachusetts and we came from New Hampshire",
  "We are at Vermont and we came from New Hampshire",
  "We are at Connecticut and we came from Massachusetts",
  "We are at Rhode Island and we came from Massachusetts",
  "We are at New York and we came from Vermont",
]
`;

exports[`Traversal Should do a Depth First Traversal 1`] = `
[
  "We are at Maine",
  "We are at New Hampshire and we came from Maine",
  "We are at Massachusetts and we came from New Hampshire",
  "We are at Connecticut and we came from Massachusetts",
  "We are at Rhode Island and we came from Connecticut",
  "We are at New York and we came from Connecticut",
  "We are at Vermont and we came from New York",
]
`;

exports[`Traversal Should not do a Breadth First Traversal if we do not give it a valid starting point 1`] = `"Invalid vertex passed in"`;

exports[`Traversal Should not do a Depth First Traversal if we do not give it a valid starting point 1`] = `"Invalid vertex passed in"`;

exports[`Undirected Adjacency Graph Unit tests Add edges Should throw if we try to add to a non existent vertex 1`] = `"One or both of these vertices don't exist Point A / Point C"`;

exports[`Undirected Adjacency Graph Unit tests Dijkstra's Shortest Path Should throw if given nonexistant vertices 1`] = `undefined`;

exports[`Undirected Adjacency Graph Unit tests Dijkstra's Shortest Path Should throw if given nonexistant vertices 2`] = `undefined`;

exports[`Undirected Adjacency Graph Unit tests Should throw if we try to add to a non existent vertex 1`] = `"One or both of these vertices don't exist Point C / Point B"`;
